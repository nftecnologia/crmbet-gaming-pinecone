{
  "name": "crmbet-ultra-robusto",
  "version": "2.0.0",
  "description": "Sistema CRM Ultra-Robusto para Gaming/Betting - Escala Massiva",
  "main": "backend/src/server.js",
  "scripts": {
    "start": "cd backend && npm start",
    "dev": "cd backend && npm run dev",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "test": "npm run test:backend && npm run test:frontend && npm run test:ml",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:ml": "cd ml && python -m pytest tests/ -v",
    "deploy": "./railway-deploy.sh",
    "deploy:production": "NODE_ENV=production ./railway-deploy.sh",
    "health": "curl -s http://localhost:3001/health | jq",
    "logs": "railway logs --service backend",
    "status": "railway ps",
    "monitor": "cd monitoring && python health_monitor.py",
    "etl": "cd etl && python run_pipeline.py --mode batch",
    "ml:train": "cd ml && python src/enterprise_ml_pipeline.py --mode train",
    "ml:predict": "cd ml && python src/enterprise_ml_pipeline.py --mode serve",
    "load:test": "cd tests && npm run load-test",
    "security:scan": "npm audit && cd backend && npm audit && cd ../frontend && npm audit",
    "performance:test": "cd tests/performance && python load_test.py --users 1000",
    "backup": "cd scripts && ./backup.sh",
    "restore": "cd scripts && ./restore.sh"
  },
  "keywords": [
    "crm",
    "gaming",
    "betting",
    "ml",
    "clustering",
    "ultra-robust",
    "enterprise",
    "scalable",
    "real-time"
  ],
  "author": "Agente UltraThink Enterprise",
  "license": "Proprietary",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/company/crmbet-ultra-robusto.git"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0",
    "python": ">=3.9.0"
  },
  "workspaces": [
    "backend",
    "frontend",
    "tests"
  ],
  "devDependencies": {
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm test"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{py}": [
      "black",
      "flake8"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}